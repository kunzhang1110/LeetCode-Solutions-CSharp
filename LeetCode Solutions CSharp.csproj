<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props" Condition="Exists('packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{7A502CA6-C189-4001-961C-0ABBBEBEFBC6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>LeetCode_Solutions_CSharp</RootNamespace>
    <AssemblyName>LeetCode-Solutions-CSharp</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>packages\MSTest.TestFramework.2.2.7\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>packages\MSTest.TestFramework.2.2.7\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Solutions.Test\AssertHelper.cs" />
    <Compile Include="Solutions.Test\T001-T050\T004_MedianOfTwoArrays.cs" />
    <Compile Include="Solutions.Test\T001-T050\T003_LongestSubString.cs" />
    <Compile Include="Solutions.Test\T001-T050\T002_AddTwoNumbers.cs" />
    <Compile Include="Solutions.Test\T001-T050\T001_TwoSum.cs" />
    <Compile Include="Solutions.Test\T001-T050\T020_Valid_Parentheses.cs" />
    <Compile Include="Solutions.Test\T001-T050\T050_Pow.cs" />
    <Compile Include="Solutions.Test\T001-T050\T049_Group_Anagrams.cs" />
    <Compile Include="Solutions.Test\T001-T050\T048_Rotate_Image.cs" />
    <Compile Include="Solutions.Test\T001-T050\T046_Permutations.cs" />
    <Compile Include="Solutions.Test\T001-T050\T038_Count_and_Say.cs" />
    <Compile Include="Solutions.Test\T001-T050\T036_Valide_Sudoku.cs" />
    <Compile Include="Solutions.Test\T001-T050\T034_FindFirsLastInSortedArray.cs" />
    <Compile Include="Solutions.Test\T001-T050\T033_SearchInRotatedArray.cs" />
    <Compile Include="Solutions.Test\T001-T050\T029_Divide_Two_Integers.cs" />
    <Compile Include="Solutions.Test\T001-T050\T028_Implement_strStr.cs" />
    <Compile Include="Solutions.Test\T001-T050\T026_Remove_Duplicates_from_Sorted_Array.cs" />
    <Compile Include="Solutions.Test\T001-T050\T022_Generate_Parentheses.cs" />
    <Compile Include="Solutions.Test\T001-T050\T021_Merge_Two_Sorted_Lists.cs" />
    <Compile Include="Solutions.Test\T001-T050\T019_Remove_Nth_Node.cs" />
    <Compile Include="Solutions.Test\T001-T050\T017_Letter_Phone_Number.cs" />
    <Compile Include="Solutions.Test\T001-T050\T015_3Sum.cs" />
    <Compile Include="Solutions.Test\T001-T050\T014_Longest_Common_Prefix.cs" />
    <Compile Include="Solutions.Test\T001-T050\T013_Roman_to_Integer.cs" />
    <Compile Include="Solutions.Test\T001-T050\T011_Container_with_Most_Water.cs" />
    <Compile Include="Solutions.Test\T001-T050\T008_StringToIntegerAtoi.cs" />
    <Compile Include="Solutions.Test\T001-T050\T007_ReverseInteger.cs" />
    <Compile Include="Solutions.Test\T001-T050\T005_LongestPalindrome.cs" />
    <Compile Include="Solutions.Test\T051-T100\T054_Spiral_Matrix.cs" />
    <Compile Include="Solutions.Test\T051-T100\T053_Maximum_Subarray.cs" />
    <Compile Include="Solutions.Test\TestHelper.cs" />
    <Compile Include="Solutions\ListNode.cs" />
    <Compile Include="Solutions\S001-050\S004_MedianOfTwoArrays.cs" />
    <Compile Include="Solutions\S001-050\S003_LongestSubString.cs" />
    <Compile Include="Solutions\S001-050\S002_AddTwoNumbers.cs" />
    <Compile Include="Solutions\S001-050\S001_TwoSum_Dict.cs" />
    <Compile Include="Solutions\S001-050\S001_TwoSum_Loops.cs" />
    <Compile Include="Solutions\S001-050\S050_Pow.cs" />
    <Compile Include="Solutions\S001-050\S049_Group_Anagrams.cs" />
    <Compile Include="Solutions\S001-050\S048_Rotate_Image.cs" />
    <Compile Include="Solutions\S001-050\S046_Permutations.cs" />
    <Compile Include="Solutions\S001-050\S038_Count_and_Say.cs" />
    <Compile Include="Solutions\S001-050\S036_Valide_Sudoku.cs" />
    <Compile Include="Solutions\S001-050\S034_FindFirsLastInSortedArray.cs" />
    <Compile Include="Solutions\S001-050\S033_SearchInRotatedArray.cs" />
    <Compile Include="Solutions\S001-050\S029_Divide_Two_Integers.cs" />
    <Compile Include="Solutions\S001-050\S028_Implement_strStr.cs" />
    <Compile Include="Solutions\S001-050\S026_Remove_Duplicates_from_Sorted_Array.cs" />
    <Compile Include="Solutions\S001-050\S022_Generate_Parentheses.cs" />
    <Compile Include="Solutions\S001-050\S021_Merge_Two_Sorted_Lists.cs" />
    <Compile Include="Solutions\S001-050\S020_Valid_Parentheses.cs" />
    <Compile Include="Solutions\S001-050\S019_Remove_Nth_Node_From_End.cs" />
    <Compile Include="Solutions\S001-050\S017_Letter_Phone_Number.cs" />
    <Compile Include="Solutions\S001-050\S015_3Sum.cs" />
    <Compile Include="Solutions\S001-050\S014_Longest_Common_Prefix.cs" />
    <Compile Include="Solutions\S001-050\S013_Roman_to_Integer.cs" />
    <Compile Include="Solutions\S001-050\S011_Container_with_Most_Water.cs" />
    <Compile Include="Solutions\S001-050\S008_StringToIntegerAtoi.cs" />
    <Compile Include="Solutions\S001-050\S007_ReverseInteger.cs" />
    <Compile Include="Solutions\S001-050\S005_LongestPalindrome.cs" />
    <Compile Include="Solutions\S001-050\S005_LongestPalindrome_Manacher.cs" />
    <Compile Include="Solutions\S051-100\S054_Spiral_Matrix.cs" />
    <Compile Include="Solutions\S051-100\S053_Maximum_Subarray.cs" />
    <Compile Include="Solutions\TreeLinkNode.cs" />
    <Compile Include="Solutions\TreeNode.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="Questions\Questions001-050-.md" />
    <None Include="Questions\Questions051-100.md" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Questions\_img\" />
  </ItemGroup>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props'))" />
    <Error Condition="!Exists('packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets'))" />
  </Target>
  <Import Project="packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets" Condition="Exists('packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets')" />
</Project>